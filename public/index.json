[
{
	"uri": "/5-setuphyriddns/5.1-createoe/",
	"title": "Create Route 53 Outbound Endpoint",
	"tags": [],
	"description": "",
	"content": "Create Route 53 Outbound Endpoint As a first step, we will create Route 53 Outbound Endpoint to allow Route 53 Resolver to forward DNS queries with domains hosted outside of Route 53. When you Route 53 Outbound Endpoint, AWS will create an elastic network interface (ENI) in each Availability Zones (AZ) you specify.\n Access Route 53 console through the search box and find Route 53.   Expand the left sidebar, select Outbound Endpoints, and select Create Outbound Endpoint  On the Create Outbound Endpoint page, enter the following information:  Endpoint name: R53-OutboundEndpoint VPC in the Region: HybridDNS-VPCStack-. (This is the VPC created by CloudFormation in the previous section) Security group for this endpoint: d-###….#_controllers. (This is the security group that CloudFormation created to protect connections to AWS Managed Microsoft Active Directory)    Configure IP addresses   At IP address #1:  In Availability Zone, select “ap-southeast-1a” In Subnet, select “Private subnet 1A” In IP address, select “Use an IP address that is selected automatically”   At IP address #2:  In Availability Zone, select “ap-southeast-1c” In Subnet, select “Private subnet 2A” In IP address, select “Use an IP address that is selected automatically”    Finally, select Create Outbound Endpoint.  After 5 minutes, Outbound Endpoint will be configured in your VPC.  Once the Outbound Endpoints are created, click on the Outbound Endpoint to view the details of the endpoint. You will see the IP addresses assigned to the Outbound Endpoints. AWS injects an elastic network interface (ENI) into your subnet and assigns this IP address to the ENI.  "
},
{
	"uri": "/2-prerequiste/2.1-createkeypair/",
	"title": "Generate Key Pair",
	"tags": [],
	"description": "",
	"content": "Generate Key Pair To ensure secure access to EC2 instances, AWS uses a private/public key in the form of a key pair. With Windows instances, the key pair is used to obtain the administrator password via the Amazon EC2 console. In this section, you will create a key pair.\n Go to AWS Management Console   Find EC2 Select EC2  In EC2 interface   Select Key Pairs Select Create key pair  In the Create key pair interface   Enter hyrid-DNS for Name Key pair type, select RSA Private key file format, select .pem Select Create key pair  Generate key pair successfully.  Important: AWS will automatically download the private key pair file with the filename hybrid-DNS.pem. Make sure you have saved the PEM file and remember the save location because you cannot reload this key file. You will have to use it to decrypt the password and connect to the EC2 instance deployed in the next step.  "
},
{
	"uri": "/1-introduce/",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "Overview The majority of existing customers own an on-premise DNS system. When you initialize resources on the AWS platform, AWS provides DNS service through Amazon Route 53. In this lab, we will experiment with building a DNS hybrid system that will allow you to integrate with your existing DNS on-premise system with **DNS service ** of Amazon Route 53.\nRoute 53 Route 53 provides some DNS capabilities such as: public DNS domain registration, ability to create private DNS zones, DNS hybrid engine and domain name resolution. With domain name resolution, Route 53 Resolver can perform recursive lookups against public DNS systems.\nIn Route 53, the Route 53 Resolver service provides three tools to enable a hybrid DNS architecture between your DNS on-premise system and AWS. These three tools are:\n Outbound Endpoints: DNS queries from Route 53 Resolver to your DNS on-premise system will be sent from Outbound Endpoints. Inbound Endpoints: Inbound endpoints act as targets for DNS queries from your DNS on-premise system to domains hosted on AWS. Route 53 Resolver Rules: With Route 53 Resolver Rules, you can configure Route 53 to forward DNS queries for your specific domains to the DNS system on-premises.  "
},
{
	"uri": "/",
	"title": "Set up Hybrid DNS with Route 53 Resolver",
	"tags": [],
	"description": "",
	"content": "Set up Hybrid DNS with Route 53 Resolver Overview The majority of existing customers own an on-premise DNS system. When you initialize resources on the AWS platform, AWS provides DNS service through Amazon Route 53. In this lab, we will experiment with building a DNS hybrid system that will allow you to integrate with your existing DNS on-premise system with **DNS service ** of Amazon Route 53.\nRoute 53 Route 53 provides some DNS capabilities such as public DNS domain registration, the ability to create private DNS zones, DNS hybrid engine, and domain name resolution. With domain name resolution, Route 53 Resolver can perform recursive lookups against public DNS systems.\nIn Route 53, the Route 53 Resolver service provides three tools to enable a hybrid DNS architecture between your DNS on-premise system and AWS. These three tools are:\n Outbound Endpoints: DNS queries from Route 53 Resolver to your DNS system will be sent from Outbound Endpoints . Inbound Endpoints: Inbound endpoints act as targets for DNS queries from your DNS on-premise system to domains hosted on AWS. Route 53 Resolver Rules: With Route 53 Resolver Rules, you can configure Route 53 to forward DNS queries for your specific domains to the system DNS on-premise.  Content  Introduction Preparation Connect to RDGW Microsoft AD Deployment Setup DNS Resource Cleanup  "
},
{
	"uri": "/5-setuphyriddns/5.2-createroute53/",
	"title": "Create Route 53 Resolver Rules",
	"tags": [],
	"description": "",
	"content": "Create Route 53 Resolver Rules The next step is to create Route 53 Resolver Rules. Route 53 Resolver rule allows to define two actions: Forward or System.\n With Forward, you can configure Route 53 Resolver to forward DNS queries to an external DNS resolvers (eg DNS server on- your premise). With System, Route 53 will query internally for domain name resolution (Private DNS zones, VPC DNS, and Public DNS).   Go to Route 53 console through the search box and find Route 53.  In the left sidebar, select Rules and select Create rule.    Enter the following information:  Name: ForwardToOnPremAD Rule type: Forward Domain name: onprem.example.com. (This is the domain name of the directory you created in the previous section) VPC that use this rule: HybridDNS-VPCStack Outbound Endpoint: R53-OutboundEndpoint     In the Target IP addresses, enter the two recorded AWS Managed Microsoft Active Directory IP addresses. Note, you need to select Add target to add a second IP address.\n Select Submit    Finish creating Route 53 Resolver  You have now configured Route 53 Resolver to forward queries for onprem.example.com to another DNS resolver (eg AWS Managed Microsoft AD). The domain name, onprem.example.com, simulates a DNS domain hosted by your DNS on-premise system.  "
},
{
	"uri": "/2-prerequiste/2.2-launchcloudformation/",
	"title": "Initialize CloudFormation Template",
	"tags": [],
	"description": "",
	"content": "Initialize CloudFormation Template In this step, you will build the network infrastructure in AWS. In this section, you\u0026rsquo;ll leverage the template from AWS Quick Start to build a secure and high availability (HA) network infrastructure using AWS CloudFormation. This is the architecture that will be built from the template.\nIn this section, you will get hands-on experience with AWS CloudFormation to build network infrastructure.\n  Login to AWS Management Console\n Find CloudFormation Select CloudFormation    In the CloudFormation interface, select Create stack.   In the Create stack interface\n Prepare Template: Template is ready Template Source: Amazon S3 URL Amazon S3 URL: https://aws-quickstart.s3.amazonaws.com/quickstart-microsoft-rdgateway/templates/rdgw-master.template Select Next     Implement stack configuration\n In Stack name, enter HybridDNS. In Availability Zones, select ap-northeast-1a and ap-northeast-1.     Perform Network configuration.\n In VPC CIDR, Private Subnet 1 \u0026amp; 2 CIDR, and Public Subnet 1 \u0026amp; 2 CIDR, keep the default values. In Allowed Remote Desktop Gateway External Access CIDR, enter 0.0.0.0/0.    This setting will allow any IP to remote into the RDP port of the EC2 instance that is about to be created. This is not a secure configuration and it is not recommended for deployment in production. We\u0026rsquo;ll come back and tighten access once CloudFormation has finished deploying the template.\n\r In Amazon EC2 configuration step\n In Key Pair Name, select the previously created Key Pair (hybrid-DNS). In Remote Desktop Gateway Instance Type, keep the default value (t2.large). In Number of RDGW Hosts, keep the default value (1). In Admin User Name, keep the default value (StackAdmin). Admin Password, set an easy to remember password for you.    The above Diagram shows two RDGW hosts (one host per Availablity Zone (AZ)). As a practice goal, we\u0026rsquo;ll start with an RDGW host to reduce CloudFormation\u0026rsquo;s initial run time. However, according to the diagram, you can see that the RDGW host is deployed to the Autoscaling Group. After the CloudFormation stack deployment is complete, you can try to configure the AutoScaling group. AutoScaling group is the key service that provides availability and scalability for your application.\n\rFor other options, keep the default value and select Next  Select Next  On the Review HybridDNS screen, check the settings again. Select the two checkboxes and select Create Stack.  The template takes about 15 minutes to complete. In the meantime, we\u0026rsquo;ll take a look at what the CloudFormation template will create. After completing the stack initialization, the stack state will change to CREATE_COMPLETE.  View Output of the newly created Stack.  "
},
{
	"uri": "/2-prerequiste/",
	"title": "Preparation ",
	"tags": [],
	"description": "",
	"content": "Preparation Overview Your first step will be to build the network infrastructure in AWS. In this section, you will leverage AWS Quick Start to build a secure and highly available network infrastructure (HA). You will then deploy one more AWS Managed Microsoft Active Directory using AWS Directory Service to simulate your DNS on-prem system. When you complete this section, you will have successfully deployed the following infrastructure architecture:\nAWS Quick Starts AWS Quick Starts is a library of architectural templates built by Solution Architects and AWS Partners. AWS Quick Starts uses AWS CloudFormation as the engine to build the architectures written in its templates.\nAWS CloudFormation AWS CloudFormation is AWS\u0026rsquo;s Infrastructure as Code (IaC) service that allows you to create template-based infrastructure (written in YAML or JSON). Template is uploaded to the CloudFormation service and automatically generates the infrastructure described in the template.\nAWS Directory Service AWS Directory Service is a tool that allows you to deploy an Active Directory right on AWS Cloud to simplify management and provide end-user access to AWS services.\nContent  Generate Key Pair Starting CloudFormation Template Security Group Configuration  "
},
{
	"uri": "/2-prerequiste/2.3-security/",
	"title": "Configuring Security Group",
	"tags": [],
	"description": "",
	"content": "Configure Security Group   Log in to AWS Console and access EC2 Management console through the search box and search for “EC2”.\n Make sure you have selected the correct Region. Notice in the left corner of AWS Console and select the correct Region you need (Here we are selecting ap-southeast-1)     In the EC2 interface\n In the left menu, select Security Groups. Select the checkbox of the security group whose description is “Enable RDP access from the Internet” In the area at the bottom of the screen, select the Inbound tab. Select Edit inbound rules.     Conduct configuration editing Inbound\n Select Delete next to the rule that says Port Range, 3391 to delete the rule Select Delete next to the rule that says Port Range, 443 to delete the rule In the RDP rule in the Source column, select in the list \u0026ldquo;My IP\u0026rdquo; (within the lab you can choose 0.0.0.0/0) In the ICMP rule in the Source column, select from the list \u0026ldquo;My IP\u0026rdquo; (in the scope of the lab, you can choose 0.0.0.0/0) Select Save rules    Complete the security group configuration.  When securing your application, you need to make sure to open only the ports that your application needs. In this step, you removed ports 3391 and 443, as you will not be using them in this exercise. Also, you\u0026rsquo;ve blocked access so that RDP and ICMP connections can only originate from your public IP address.\n\r"
},
{
	"uri": "/3-connecttordgw/",
	"title": "Connecting to RDGW",
	"tags": [],
	"description": "",
	"content": "Connect to RDGW Next, you will log in to the Remote Desktop Gateway Server (RDGW) instance using Remote Desktop Protocol (RDP). If you connect from a Windows computer, RDP will be available. If you are using a Mac, please download the RDP client here.\n Login to AWS Console and access EC2 Management console   In EC2 interface\n In the left menu, select Instances. Select the checkbox at the RDGW server location. Select Connect.     In the Connect to instance interface\n Select RDP Client and select “Download Remote Desktop File” to download the RDP file. Select Get Password.     In the Get Windows password interface\n Select Browse and point to the location of the key pair file we downloaded earlier. Select Decrypt Password.    Once you have the decrypted password, copy and save it.   Launch the downloaded RDP file and use the above password to login to the RDGW server.\n Select Connect    Enter the password and select OK  Continue to select Yes  This is the screen connecting to the instance successfully  "
},
{
	"uri": "/5-setuphyriddns/5.3-createie/",
	"title": "Create Route 53 Inbound Endpoints",
	"tags": [],
	"description": "",
	"content": "Create Route 53 Inbound Endpoints To allow your DNS on-premise system to query Route 53 Resolver for any DNS zones (e.g. Private Zones) hosted on Route 53, you need to create Route 53 Inbound Endpoint. The Inbound Endpoint is a bridge for other services to query Route 53 for domain name resolution. When you create an Inbound Endpoint, AWS creates an elastic network interface (ENI) in each availability zone (AZ) that you specify that will receive inbound DNS queries.\n Access Route 53 console through the search box and find Route 53.  Expand the left sidebar, select Inbound endpoints and select Create inbound endpoint.    On the Create inbound endpoint page, enter the following information:  At Endpoint name: R53-InboundEndpoint VPC in the Region: HybridDNS-VPCStack-. (This is the VPC created by CloudFormation in the previous section) Security group for this endpoint: d-###….#_controllers. (This is the security group that CloudFormation created to protect the connection to AWS Managed Microsoft Active Director)    Configure IP Addresses   At IP address #1:  In Availability Zone, select “ap-northeast-1a” In Subnet, select “Private subnet 1A” In IP address, select “Use an IP address that is selected automatically”   At IP address #2:  In Availability Zone, select “ap-northeast-1c” In Subnet, select “Private subnet 2A” In IP address, select “Use an IP address that is selected automatically”    Select Create inbound endpoint  Finish creating Inbound Endpoint  Once the Inbound Endpoints are created, click on the inbound endpoint to view the endpoint\u0026rsquo;s details. You will see the IP addresses assigned to the inbound endpoints. AWS injects an elastic network interface (ENI) into your subnet and assigns this IP address to ENI.  "
},
{
	"uri": "/4-setupad/",
	"title": "Microsoft AD Deployment",
	"tags": [],
	"description": "",
	"content": "Deploy Microsoft AD To emulate DNS on-premise, we will use AWS Directory Service to deploy AWS Managed Microsoft Active Directory in two private subnets created by CloudFormation as shown below :\n Log in to AWS Console and access the Directory Service console through the search box and find Directory Services.   Make sure you have selected the correct Region. Notice in the left corner of AWS Console and select the correct Region you need (Here we are selecting ap-southeast-1)   If you are accessing Directory Services for the first time in your region, you will be taken to the initial welcome screen. Expand the left sidebar and select Directories.\n Select Set up directory.    Select Directory types, select AWS Managed Microsoft AD   In the Enter Directory Information page, enter the following information:\n  In Edition: select Standard Edition.\n  In Directory DNS name: onprem.example.com (this DNS name must be unique among your directories).\n  In Directory NetBIOS name: onprem (this NetBIOS name must be unique among your directories).\n     Continue configuration\n  In Directory Description: This is to simulate the on-prem AD.\n  In Admin Password: Use a password you can remember. Please note the password complexity requirements listed on the screen.\n  In Confirm password: Re-enter the password again.\n  Select Next.\n    In Choose VPC and subnets, select the VPC HybridDNS-VPCStack that we created earlier and two private subnets, Private subnet 1A and Private subnet 2A. Then select Next.  On the Review \u0026amp; create screen, review the settings and select Create Directory.  Directory will take about 20 minutes to create. During this time, AWS will provision two Windows servers and elevate them to Active Directory domain controllers for the AD forest you specified. This AD forest will be a new AD forest. The process will be complete when you see the status change to Active  Once the directory has been created, you can view the details by clicking on the Directory ID. The two DNS IP addresses listed are the IP addresses of elastic network interfaces (ENI) that have your availability zone set to communicate with AWS Managed Microsoft AD Domain Controllers.  "
},
{
	"uri": "/5-setuphyriddns/5.4-results/",
	"title": "Test results",
	"tags": [],
	"description": "",
	"content": "Test results  Connect to RD Gateway Server   Use Command Prompt and execute the command:  nslookup onprem.example.com Open PowerShell on Windows and execute the command:  Resolve-DnsName onprem.example.com "
},
{
	"uri": "/5-setuphyriddns/",
	"title": "Setup DNS",
	"tags": [],
	"description": "",
	"content": "Set up DNS In this lab, you\u0026rsquo;ll use the three tools (Outbound Endpoint, Resolver Rules, and Inbound Endpoints) of Route 53 Resolver to set up a hybrid DNS for your AWS infrastructure and On-premises.\nThe AWS Managed Microsoft Active Directory service you created in the previous section will be used to simulate your DNS on-premise system. The following figure will show the architecture that you will continue to build on top of the infrastructure you deployed in the previous section:\nExplain:\n Red Arrow – You will configure Outbound Endpoint to bridge Route 53 Resolver that can forward DNS queries to AWS Managed Active Directory. You will create the Route 53 Resolver Rule to provide instructions for forwarding DNS queries from Route 53 Resolver externally to AWS Managed Active Directory. Blue Arrow – You will configure the Inbound Endpoint to create a bridge for AWS Managed Active Directory that can forward DNS queries to Route 53 Resolver. From there, Route 53 - Resolver can forward those queries to EC2 instances that are acting as Remote Desktop Gateways. Green arrow – EC2 instance will connect to Route 53 Resolver using IP address VPC+2. By default, VPC+2 is the IP address for the DNS Resolver of the VPC. (Example: VPC CIDR in this post is 10.0.0.0/16. So, the IP address of DNS Resolver in VPC is 10.0.0.2). Black Arrow– Route 53 Resolver can forward DNS queries from EC2 instance or AWS Managed Active Directory to other services of AWS.  Content  Create Route 53 Outbound Endpoint Create Route 53 Resolver Rules Create Route 53 Inbound Endpoints Test Result  Once done, you\u0026rsquo;ll understand how to set up a DNS hybrid between DNS hosted zones on your on-premises system and in AWS. In the exercise, we used the AWS Managed Microsoft AD DNS server to simulate the DNS on-premise system. To visualize integration with your actual on-premise environment, you need to specify IP addresses for your DNS on-premise servers instead of the AWS Managed Microsoft AD * IP addresses DNS*. To allow your DNS on-premise servers to resolve any AWS Private Zones hosted on Route 53, you would create DNS forwarding rules in the DNS system on- your premises. For DNS domains hosted on Route 53, forward to the IP address of the Inbound Endpoint.\n\r"
},
{
	"uri": "/6-cleanup/",
	"title": "Clean up resources",
	"tags": [],
	"description": "",
	"content": "Clean up resources Remove inbound endpoint  Access to Route 53 Management Console In the left sidebar, select Inbound endpoints Tick the Inbound endpoint related to the lab Select Delete Type Delete in the empty box and press Submit  Remove Resolver Rule  Access to Route 53 Management Console In the left sidebar, select Rules Click on the Rule related to the lab to enter the Rule information page In the VPCs section, tick the VPC that is connected to the Rule and select Disassociate Type disassociate in the box and select Submit Wait 1-2 minutes to disconnect from that VPC. In the information page of the Rule, select Delete Type Delete in the empty box and press Submit  Delete Outbound Endpoint  Access to Route 53 Management Console In the left sidebar, select Outbound Endpoints Tick Outbound Endpoint related to the lab Select Delete Type Delete in the empty box and press Submit  Remove AWS Managed Microsoft Active Directory  Access to Directory Service Management Console In the left sidebar, select Directories Tick on the Directory related to the lab Select Actions and select Delete directory Type the domain name DNS of the directory in the empty box and press Delete  Delete CloudFormation Stack - when you delete CloudFormation Stack, the resources created by that stack are deleted.  In this case, the HybridDNS stack has created two nested stacks, and when you delete the HybridDNS stack, the two-child stacks are also deleted. Access to CloudFormation Management Console In the left sidebar, select Stacks Tick the HybridDNS stack and select Delete In the prompt, select Delete stack Wait a few minutes until CloudFormation clears all resources  "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]