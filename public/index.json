[
{
	"uri": "/1-prerequisite/1-build-network-cf/",
	"title": "Build Network with CloudFormation",
	"tags": [],
	"description": "",
	"content": "The first step to building a Windows infrastructure in AWS is to build out the network infrastructure. You will leverage an AWS Quick Start to build out a secure highly available network infrastructure show below.\nAWS Quick Starts leverage AWS CloudFormation which is AWS’s Infrastructure as Code (IaC) service that allows you to create infrastructure based upon a template (written in YAML or JSON). The template is uploaded to the CloudFormation service and itc creates the infrastructure described in the template.\nContents:\n 1.1.1. Creating a Key Pair 1.1.2. Running the Quick Start CloudFormation Template 1.1.3. Securing the Environment  1.1.1. Creating a Key Pair In order to secure access to your EC2 instances, AWS uses private/public key technology and this takes the form of an AWS key pair. With Windows instances, the key pair is used to obtain the administrator password via the Amazon EC2 console. In this section, you will create the key pair.\n Login to the AWS Console and navigate to the EC2 Management console. To get to the EC2 management console, in the find a service search box, type EC2. Make sure you are choosing the right region. Look at the upper right hand corner of the screen and switch to the your region if you are in a different region. (Here we use Asia Pacfic (Tokyo)) On the left menu bar, select Key Pairs. Select Create key pair. In the Create Key pair screen,  For Name, enter \u0026ldquo;hybrid-dns\u0026rdquo;. (Or any name that suitable for you) For File format, check pem. Press Create key pair.    Important: AWS downloads the private key portion of the key pair. It will have a name like hybrid-dns.pem. Be sure to save the PEM file and record the location of this file. You will use this file later to decrypt the administrator password. You won’t be able to re-download this file later.  1.1.2. Running the Quick Start CloudFormation Template In this section, you are going to get hands-on experience with AWS CloudFormation to build out the base network infrastructure.\n Login to the AWS Console and navigate to the CloudFormation (CFN) console. In the find a service search box, type CloudFormation. Make sure you are choosing the right region. Look at the upper right hand corner of the screen and switch to the your region if you are in a different region. (Here we use Asia Pacfic (Tokyo)) Click on Create stack \u0026gt; With new resources (standard) In the Create stack screen, enter the values as shown below and click on Next.  Prepare Template: Template is ready Template Source: Amazon S3 URL Amazon S3 URL:    https://aws-quickstart.s3.amazonaws.com/quickstart-microsoft-rdgateway/templates/rdgw-master.template\rOr download the template below: \r\rCloudFormation Template\r\r\rrdgw-master.template\r\r(9 ko)\r\r\r\r For the Stack name, enter HybridDNS.\n  For the Availability Zones, select ap-northeast-1a and ap-northeast-1c.\n  For VPC CIDR, Private Subnet 1 \u0026amp; 2 CIDR, and Public Subnet 1 \u0026amp; 2 CIDR, leave the default values.   For the Allowed Remote Desktop Gateway External Access CIDR, enter 0.0.0.0/0. This will allow any IP to be able to RDP into the RDP gateway.\nThis is not a secure configuration and it is not recommended for a production deployment. We will go back and tighten this down after the CloudFormation stack has been deployed.\n\r  In the Key Pair Name, select the Key Pair that you created earlier (e.g. hybrid-dns).\n  For the Remote Desktop Gateway Instance Type, leave the default (t2.large).\n  For the Number of RDGW Hosts, leave the default (1).\nPlease note that the above diagram shows two RDGW hosts (one in each Availablity Zone (AZ)).\nFor the purposes of the lab, we are starting with one RDGW host to reduce the amount of time that the CloudFormation process takes to run. However in the diagram, you can see that the RDGW hosts are deployed into an AutoScaling group.\nAfter the CloudFormation process finishes, you can examine the AutoScaling group. Autoscaling groups are a key service that can provide scalability and availability to your application.\n\r  For Admin User Name, leave the default (StackAdmin).\n  For Admin Password, set a password that you will remember. Note, the password complexity requirements (8 characters minimum, and needs letters, numbers, and symbols).\n  For Domain DNS Name, leave the default (example.com).\n  For the remaining options, leave the default values and click Next.   On the Configure Stack Options, review the options. Click Next.\n  On the Review HybridDNS screen, review the settings. Check the two checkboxes and click Create Stack.   The template takes about 15 minutes to complete. During this time, we will review what the CloudFormation template is creating.\nOnce stack creation is completed, the status on the stack creation will change to CREATE_COMPLETE.\n\r1.1.3. Securing the Environment We are going to tighten the security of the RDGW access.\n Login to the AWS Console and navigate to the EC2 Management console. To get to the EC2 management console, in the find a service search box, type EC2. Make sure you are choosing the right region. Look at the upper right hand corner of the screen and switch to the your region if you are in a different region. (Here we use Asia Pacfic (Tokyo)) In the left hand menu, click Security Groups. Select the checkbox for the security group that has a description, “Enable RDP access from the Internet” In the bottom area, select the Inbound tab. Press Edit.  Click the Delete next to the rule that contain the Port Range, 3391 to delete the rule Click the Delete next to the rule that contain the Port Range, 443 to delete the rule On the RDP rule in the Source column, click the dropdown and select “My IP” On the ICMP rule in the Source column, click the dropdown and select “My IP” Press Save   When securing your application, you want to make sure to only open the ports that your application needs.\nIn this example, you removed port 3391 and 443, since you will not be using those ports in these labs. Also, you have locked down the access so that the RDP and ICMP connections can only originate from your public IP address.\nSome customers lock down access so that RDP and ICMP connections can only originate from the public IP addresses of their corporate network.\n\r"
},
{
	"uri": "/2-impletement-hybrid-dns/1-outbound-endpoint/",
	"title": "Config Outbound Endpoint",
	"tags": [],
	"description": "",
	"content": "The first step is to create Route 53 Outbound Endpoints which enable Route 53 Resolver to forward DNS queries to DNS domains hosted outside of Route 53. When you create Route 53 Outbound Endpoints, AWS will create an elastic network interface (ENI) in the Availability Zones (AZ) that you specify.\nContents:\n Config Outbound Endpoint  Config Outbound Endpoint  Login to the AWS Console and navigate to the Directory Service console. In the find a service search field, type Directory Services. Make sure you are choosing the right region. Look at the upper right hand corner of the screen and switch to the your region if you are in a different region. (Here we use Asia Pacfic (Tokyo)) Click on Directory ID for the directory that you deployed in the previous Section. Note the DNS addresses for your directory. When you created Managed Active Directory, it comes with DNS service on each domain controller. You need to enable forwarding DNS queries to your Active Directory domain to the right DNS servers. Open Route 53 console. In the find a service search field, type Route 53. In the Resolver section, click Outbound endpoints and then Create outbound endpoint. Enter the following information:  Endpoint name: R53-OutboundEndpoint VPC in the Region: ap-northeast-1 (Tokyo): HybridDNS-VPCStack-* For the security group for this endpoint, select the security group that was created for the Managed AD setup earlier: “d-###..##_controllers …”. Your id for the Managed AD will be different from the one in my lab shown below.\n\r    IP address #1:  Availability Zone: ap-northeast-1a Subnet: Private Subnet 1A Use an IP address that is selected automatically   IP address #2:  Availability Zone: ap-northeast-1c Subnet: Private Subnet 2A Use an IP address that is selected automatically    Finally, click Submit.  After 5 minutes, the Outbound endpoint will be configured in your VPC.\n\r"
},
{
	"uri": "/",
	"title": "Hybrid DNS with Route53 Resolver",
	"tags": [],
	"description": "",
	"content": "Implement Hybrid DNS with Route53 Resolver Most customers have an on-premises DNS infrastructure. When you create resources in AWS, AWS provides DNS services provided by Amazon Route 53. In this lab, you will get hands-on experience with creating a hybrid DNS infrastructure which allows you to integrate your on-premises DNS infrastructure with Amazon Route 53 DNS.\nRoute 53 provides a number of DNS capabilities such as: public DNS domain registration, ability to create private DNS zones, hybrid DNS tools, and DNS name resolution. With DNS name resolution, Route 53 Resolver can perform recursive lookups against public name servers.\nWithin Route 53, the Route 53 Resolver service provides three tools to enable hybrid DNS architecture between your on-premises DNS infrastructure and AWS. These three tools are:\n Outbound Endpoints: DNS queries from Route 53 Resolver for your on-premises DNS infrastructure will originate from outbound endpoints. Inbound Endpoints: Inbound endpoints serve as targets for DNS queries from your on-premises DNS infrastructure for DNS domains hosted in AWS. Route 53 Resolver Rules: With Route 53 Resolver Rules, you can configure Route 53 to forward DNS queries for your specific DNS domains to on-premises DNS servers.  "
},
{
	"uri": "/1-prerequisite/",
	"title": "Prerequiste",
	"tags": [],
	"description": "",
	"content": "The first step to building a Windows infrastructure in AWS is to build out the network infrastructure. In this section, you will leverage an AWS Quick Start to build out a secure highly available network infrastructure show below.\nAWS Quick Starts leverage AWS CloudFormation which is AWS’s Infrastructure as Code (IaC) service that allows you to create infrastructure based upon a template (written in YAML or JSON). The template is uploaded to the CloudFormation service and itc creates the infrastructure described in the template.\nContents  1.1. Build Network with CloudFormation 1.2. Connecting to the Remote Desktop Gateway Server 1.3. Deploy AWS Managed Microsoft Active Directory  "
},
{
	"uri": "/2-impletement-hybrid-dns/2-route53-rule/",
	"title": "Config Route53 Resolver Rules",
	"tags": [],
	"description": "",
	"content": "The next step is to create Route 53 Resolver Rules. Route 53 Resolver rules allow two actions: Forward or System.\n With the Forward action, you can configure Route 53 resolver to forward DNS queries for specific DNS domain(s) to external DNS resolvers (e.g. your on-premises DNS servers). With System, Route 53 will query its hierarchy for name resolution (Private DNS zones, VPC DNS, and Public DNS).  Contents:\n Config Route53 Resolver Rules  Config Route53 Resolver Rules  In the Resolver section, click Rules and then Create a new rule. Enter the following information:  Name: FowardToOnPremAD Rule type: Forward Domain name: onprem.example.com  VPC that use this rule: HybridDNS-VPCStack Outbound endpoint: R53-OutboundEndpoint For the Target IP addresses, specify the two IP addresses of your Managed AD domain controllers, that you noted at the Step 4 (Section 2.1). You will have to press Add target to add the second IP address.\n\r Press Submit.     Until now, you configured Route 53 Resolver to forward queries for onprem.example.com to another DNS resolver (e.g. AWS Managed Microsoft AD).\nThe domain, onprem.example.com, simulates a DNS domain hosted by your on-premises DNS infrastructure.\n"
},
{
	"uri": "/1-prerequisite/2-connect-to-rdgw/",
	"title": "Connecting to RDGW",
	"tags": [],
	"description": "",
	"content": "Contents:\n Remote Desktop Gateway Server  Remote Desktop Gateway Server You will next login to the Remote Desktop Gateway Server (RDGW) server using Remote Desktop Protocol (RDP). If you connecting from a Windows computer, RDP should be already present. If you are using a Mac, please download the RDP client here.\n Log in to the AWS Console and go to Elastic Compute Cloud (EC2) console. On the left hand menu, select Instances. Select the checkbox near to the RDGW server. Click the Connect button. Click the “Download Remote Desktop File” to download the RDP file. Click the Get Password button. Click the Choose File button and browse to the location of the key pair file that you downloaded earlier.  Click Decrypt Password. Once the password is decrypted, copy it to the clipboard. Double click the RDP connection file that you downloaded and paste the password from the clipboard into the password field.  "
},
{
	"uri": "/2-impletement-hybrid-dns/",
	"title": "Setting Up Hybrid DNS",
	"tags": [],
	"description": "",
	"content": "In this lab, you will get hands-on experience with these three Route 53 resolver tools. AWS Managed Microsoft Active Directory will be used to simulate your on-premises DNS infrastructure.\nContents  2.1. Configuring Route 53 Outbound Endpoint 2.2. Configuring Route 53 Resolver Rules 2.3. Configuring Route 53 Inbound Endpoints 2.4. Testing Outbound Endpoint and Resolver Rule  After this lab, you learned how you can enable hybrid DNS name resolution between DNS zones hosted in your on-premises infrastructure and AWS. In the lab, we used AWS Managed Microsoft AD DNS servers to simulate your on-premises DNS infrastructure. If you wanted to envision the integration with your on-premises environment, you would specify the IP addresses for your on-premises DNS servers instead of the AWS Managed Microsoft AD DNS servers.\nTo enable your on-premises DNS servers to resolve any AWS Private Zones hosted on Route 53, you would create DNS forwarding rules in your on-premises DNS infrastructure. For the DNS domains hosted on Route 53, forward to the IP addresses of the Inbound Endpoints.\n"
},
{
	"uri": "/2-impletement-hybrid-dns/3-inbound-endpoint/",
	"title": "Config Inbound Endpoint",
	"tags": [],
	"description": "",
	"content": "To enable your on-premises DNS infrastructure to query Route 53 Resolver for any DNS zones (e.g. Private Zones) hosted on Route 53, you need to create Route 53 Inbound endpoints. Inbound endpoints allows other services to query Route 53 for DNS resolution. When you create an Inbound Endpoint, AWS creates an elastic network interface (ENI) in each availability zone (AZ) that you specify that will receive the inbound DNS queries.\nContents:\n Config Inbound Endpoint  Config Inbound Endpoint  From the Route 53 console, select Inbound endpoints under Resolver. Select Create inbound endpoint.  For Endpoint name: R53-InboundEndpoint For VPC in the Region: HybridDNS-VPCStack For Security group for this endpoint, choose the security group that we created to secure Managed AD (e.g. d-###….#_controllers). The ids for your environment will be different than mine.\n\r   For IP address #1,  For Availability Zone, select us-east-1a For Subnet, select Private subnet 1A For IP address, Select Use an IP address that is selected automatically   For IP address #2,  For Availability Zone, select us-east-1b For Subnet, select Private subnet 2A For IP address, Select Use an IP address that is selected automatically    Press Submit.   Once the Inbound endpoints are created, click on the inbound endpoint hyperlink for details on the endpoint. You should see the IP addresses that were assigned for the inbound endpoints. AWS put an elastic network interface (ENI) into your subnet and assigned this IP address to the ENI.\n"
},
{
	"uri": "/1-prerequisite/3-deploy-mad/",
	"title": "Deploy Microsoft AD",
	"tags": [],
	"description": "",
	"content": "Contents:\n AWS Managed Microsoft Active Directory  AWS Managed Microsoft Active Directory In order to simulate on-premises DNS infrastructure, we will use AWS Managed Microsoft Active Directory service.\n Login to the AWS Console and navigate to the Directory Service console. In the find a service search field, type Directory Services. Make sure you are choosing the right region. Look at the upper right hand corner of the screen and switch to the your region if you are in a different region. (Here we use Asia Pacfic (Tokyo)) If this is the first time you are opening the Directory Services in this region, you’ll be prompted with a welcome screen. Select “AWS Managed Microsoft AD” and click on Set up directory. In the next screen, select “AWS Managed Microsoft AD” and click Next.  In the Enter Directory Information screen, enter the following information:  For Edition: select Standard Edition. Directory DNS name: onprem.example.com [Make this DNS name unique from your other directories so you can establish trusts in the future if required.] Directory NetBIOS name: onprem [Make this NetBIOS unique from your other directories as well if you need establish trusts in the future if required.] Directory Description: This is to simulate the on-prem AD. Admin password: Use a password you can remember. You will use this in future labs. Please also review the password complexity requirements outlined on the screen.\n\r Confirm password: Confirm the password again Click Next.    For the VPC and subnets, please select the HybridDNS-VPCStack that you created above and select the two private subnets Private subnet 1A and Private subnet 2A. After selecting the VPC and Subnets, Click Next.  On the Review \u0026amp; create screen, review the settings and click on Create Directory.  The directory will take about 20 minutes to create. During this time, AWS is provisioning two Windows servers, and promoting them to be Active Directory domain controllers for the AD forest that you specified. This AD forest will be a new AD forest. The process will be complete when you see the status field turn to Active. Once the directory is created, you can see the details by clicking on the Directory ID. The two DNS IP addresses that are listed are the IP addresses of the elastic network interfaces (ENI) that have been placed in your availability zones to communicate to the AWS Managed Microsoft AD Domain Controllers.  "
},
{
	"uri": "/2-impletement-hybrid-dns/4-testing-result/",
	"title": "Testing Result",
	"tags": [],
	"description": "",
	"content": "Contents:\n Testing Result  Testing Result  Connect to your RD Gateway Server (or use an open session from Prerequiste). Open PowerShell window and run the command: Resolve-DnsName onprem.example.com Or using Command Prompt and use: nslookup onprem.example.com  You should receive the DNS response with correct IP addresses for your Active Directory domain.\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]